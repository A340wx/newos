/*
** Copyright 2003 Graham Batty. All rights reserved.
** Distributed under the terms of the NewOS License
*/

#ifndef __newos__libcxx_new__
# define __newos__libcxx_new__

# include <newos/types.h>

# ifndef __cplusplus
#  error new is a C++ header
# endif

namespace std
{
	// for now all new calls are nothrow, but this will have to change at some point.
	struct nothrow_t {};
	extern const nothrow_t nothrow;

	typedef void (*new_handler)();
	new_handler set_new_handler(new_handler new_p) throw();
}

// normal new operators
void *operator new(size_t);
void *operator new(size_t, const std::nothrow_t&);
void *operator new[](size_t);
void *operator new[](size_t, const std::nothrow_t&);

// placement new operators (should do nothing)
void *operator new(size_t, void *);
void *operator new[](size_t, void *);

// normal delete operators
void operator delete(void*);
void operator delete(void*, const std::nothrow_t&);
void operator delete[](void*);
void operator delete[](void*, const std::nothrow_t&);

#endif
